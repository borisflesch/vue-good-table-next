import{_ as l,r as e,o as i,c,d as s,b as a}from"./app-CbJnpAZk.js";const r={};function u(d,n){const t=e("grouped-table"),p=e("grouped-custom-span"),o=e("grouped-custom");return i(),c("div",null,[n[0]||(n[0]=s(`<h1 id="grouped-table" tabindex="-1"><a class="header-anchor" href="#grouped-table"><span>Grouped Table</span></a></h1><p>To create grouped rows, you need two things.</p><h4 id="_1-add-group-options-to-table-component" tabindex="-1"><a class="header-anchor" href="#_1-add-group-options-to-table-component"><span>1. Add group-options to table component</span></a></h4><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-good-table</span></span>
<span class="line">  <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rows<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:group-options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{</span>
<span class="line">    enabled: true</span>
<span class="line">  }<span class="token punctuation">&quot;</span></span></span>
<span class="line"><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-good-table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-make-sure-the-rows-are-formatted-correctly-grouped-rows-need-to-be-nested-within-header-rows-containing-data-rows-in-their-children-property-for-example" tabindex="-1"><a class="header-anchor" href="#_2-make-sure-the-rows-are-formatted-correctly-grouped-rows-need-to-be-nested-within-header-rows-containing-data-rows-in-their-children-property-for-example"><span>2. Make sure the rows are formatted correctly. Grouped rows need to be nested within header rows containing data rows in their children property. For example:</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token literal-property property">rows</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;span&#39;</span><span class="token punctuation">,</span> <span class="token comment">// span means this header will span all columns</span></span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Mammal&#39;</span><span class="token punctuation">,</span> <span class="token comment">// this is the label that&#39;ll be used for the header</span></span>
<span class="line">    <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// if this is true, label will be rendered as html</span></span>
<span class="line">    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Elephant&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">diet</span><span class="token operator">:</span> <span class="token string">&#39;herbivore&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Cat&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">diet</span><span class="token operator">:</span> <span class="token string">&#39;carnivore&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">28</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)),a(t,{options:{enabled:!0}}),n[1]||(n[1]=s(`<h4 id="_3-sometimes-you-might-want-a-summary-row-instead-of-a-header-row-for-example-if-you-want-to-show-total-count-for-your-group" tabindex="-1"><a class="header-anchor" href="#_3-sometimes-you-might-want-a-summary-row-instead-of-a-header-row-for-example-if-you-want-to-show-total-count-for-your-group"><span>3. Sometimes, you might want a summary row instead of a header row. For example, if you want to show total count for your group</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token literal-property property">rows</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Mammals Total&#39;</span><span class="token punctuation">,</span> <span class="token comment">// this is the label that&#39;ll be used for the header</span></span>
<span class="line">    <span class="token literal-property property">diet</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// total count will be displayed here</span></span>
<span class="line">    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Elephant&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">diet</span><span class="token operator">:</span> <span class="token string">&#39;herbivore&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Cat&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">diet</span><span class="token operator">:</span> <span class="token string">&#39;carnivore&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">28</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-if-you-want-the-header-summary-row-to-show-up-at-the-bottom-of-the-group-you-can-specify-that-in-the-group-options-property-of-the-table" tabindex="-1"><a class="header-anchor" href="#_4-if-you-want-the-header-summary-row-to-show-up-at-the-bottom-of-the-group-you-can-specify-that-in-the-group-options-property-of-the-table"><span>4. If you want the header/summary row to show up at the bottom of the group, you can specify that in the group-options property of the table.</span></a></h4><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-good-table</span></span>
<span class="line">  <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rows<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:group-options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{</span>
<span class="line">    enabled: true,</span>
<span class="line">    headerPosition: &#39;bottom&#39;</span>
<span class="line">  }<span class="token punctuation">&quot;</span></span></span>
<span class="line"><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-good-table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4)),a(t,{options:{enabled:!0,headerPosition:"bottom"}}),n[2]||(n[2]=s(`<h4 id="_5-what-if-you-wanted-to-add-a-total-count-in-summary-rows" tabindex="-1"><a class="header-anchor" href="#_5-what-if-you-wanted-to-add-a-total-count-in-summary-rows"><span>5. What if you wanted to add a total count in summary rows?</span></a></h4><p>In your column definition add a property, <code>headerField</code>. This is just like <code>field</code> property but for summary/header rows only. So lets say we wanted to add a <strong>sum function</strong> to this field.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// in columns</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Count&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&#39;count&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">headerField</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sumCount<span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// in methods we define sumCount</span></span>
<span class="line"><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function-variable function">sumCount</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">rowObj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rowObj<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rowObj<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      sum <span class="token operator">+=</span> rowObj<span class="token punctuation">.</span>children<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>count<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> sum<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="customizing-header-row" tabindex="-1"><a class="header-anchor" href="#customizing-header-row"><span>Customizing Header Row</span></a></h2><p>If you want more control over what the header row looks like, you can use slots the same way you <a href="/guide/advanced/#custom-row-template" target="_blank" rel="noopener noreferrer">customize rows</a>. For example if you want to add a button in the header row or something, this would be the way to do it.</p><h3 id="when-mode-is-span" tabindex="-1"><a class="header-anchor" href="#when-mode-is-span"><span>When mode is &#39;span&#39;</span></a></h3><p>In this case, the header row spans across all columns</p><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-good-table</span></span>
<span class="line">  <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rows<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:group-options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{</span>
<span class="line">    enabled: true,</span>
<span class="line">    headerPosition: &#39;top&#39;</span>
<span class="line">  }<span class="token punctuation">&quot;</span></span></span>
<span class="line"><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#table-header-row</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-fancy-class<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      {{ props.row.label }}</span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-good-table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8)),a(p,{options:{enabled:!0,headerPosition:"top"}}),n[3]||(n[3]=s(`<h3 id="when-mode-is-not-span" tabindex="-1"><a class="header-anchor" href="#when-mode-is-not-span"><span>When mode is not &#39;span&#39;</span></a></h3><p>In this case header row expects a value for each column</p><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-good-table</span></span>
<span class="line">  <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rows<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:group-options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{</span>
<span class="line">    enabled: true,</span>
<span class="line">    headerPosition: &#39;top&#39;</span>
<span class="line">  }<span class="token punctuation">&quot;</span></span></span>
<span class="line"><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#table-header-row</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props.column.field == &#39;action&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fancy-btn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      {{ props.formattedRow[props.column.field] }}</span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-good-table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3)),a(o,{options:{enabled:!0,headerPosition:"top"}}),n[4]||(n[4]=s(`<div class="hint-container tip"><p class="hint-container-title">Tips</p><ul><li>The original row object can be accessed via <code>props.row</code></li><li>The column object can be accessed via <code>props.column</code></li><li>You can access the formatted row data (for example - formatted date) via <code>props.formattedRow</code></li></ul></div><h2 id="collapsable-rows" tabindex="-1"><a class="header-anchor" href="#collapsable-rows"><span>Collapsable Rows</span></a></h2><p>To allow the row to collapse and expand you can use the groupOption &quot;collapsable&quot;. You can either pass in a boolean or a number. If <code>collapsable</code> is set to <code>true</code> then it will default to making the first column collapsable. Alternatively, you can specify the column index number. If you only add new rows to your table at the end, then the expanded or collapsed state of your rows will be maintained. However if you need to insert rows before the last one, you can pass in <code>rowKey</code> inside of <code>groupOptions</code> with a unique identifier for your rows. The expanded and collapsed state will then be maintained.</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line">&lt;vue-good-table</span>
<span class="line">  ref=&quot;myCustomTable&quot;</span>
<span class="line">  :columns=&quot;columns&quot;</span>
<span class="line">  :rows=&quot;rows&quot;</span>
<span class="line">  :group-options=&quot;{</span>
<span class="line">    enabled: true,</span>
<span class="line">    rowKey:&quot;id&quot;,</span>
<span class="line">    collapsable: true // or column index</span>
<span class="line">  }&quot;</span>
<span class="line">&gt;</span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-good-table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To expand/collapse all you can use the method called <code>expandAll</code> or <code>collapseAll</code>.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>myCustomTable<span class="token punctuation">.</span><span class="token function">expandAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>myCustomTable<span class="token punctuation">.</span><span class="token function">collapseAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Live Demo:</strong> https://jsfiddle.net/nb6fcqs7</li></ul>`,7))])}const k=l(r,[["render",u],["__file","grouped-table.html.vue"]]),v=JSON.parse(`{"path":"/guide/advanced/grouped-table.html","title":"Grouped Table","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Customizing Header Row","slug":"customizing-header-row","link":"#customizing-header-row","children":[{"level":3,"title":"When mode is 'span'","slug":"when-mode-is-span","link":"#when-mode-is-span","children":[]},{"level":3,"title":"When mode is not 'span'","slug":"when-mode-is-not-span","link":"#when-mode-is-not-span","children":[]}]},{"level":2,"title":"Collapsable Rows","slug":"collapsable-rows","link":"#collapsable-rows","children":[]}],"git":{"updatedTime":1692177130000,"contributors":[{"name":"Akshay Anand","email":"aks9800@gmail.com","commits":8},{"name":"The Jared Wilcurt","email":"TheJaredWilcurt@users.noreply.github.com","commits":3},{"name":"owen","email":"ciruz001@cougars.csusm.edu","commits":3},{"name":"Boris Flesch","email":"boris.flesch@gmail.com","commits":1},{"name":"Rob Gaston","email":"rob.gaston@wwt.com","commits":1},{"name":"Rob Gaston","email":"robcoach0221@gmail.com","commits":1},{"name":"awbeny","email":"55807616+awbeny@users.noreply.github.com","commits":1},{"name":"cassmbautista","email":"35530271+cassmbautista@users.noreply.github.com","commits":1}]},"filePathRelative":"guide/advanced/grouped-table.md"}`);export{k as comp,v as data};
