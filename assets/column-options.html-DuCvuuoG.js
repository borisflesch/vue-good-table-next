import{_ as t,r as l,o as i,c as o,d as a,a as n,e,b as c,w as r}from"./app-CbJnpAZk.js";const d={},u={class:"hint-container tip"};function m(k,s){const p=l("RouteLink");return i(),o("div",null,[s[3]||(s[3]=a(`<h1 id="column-options" tabindex="-1"><a class="header-anchor" href="#column-options"><span>Column Options</span></a></h1><p>Each column objects can contain the following configuration options:</p><h2 id="label" tabindex="-1"><a class="header-anchor" href="#label"><span>label</span></a></h2><p>type <code>String</code></p><p>Text to put on column header.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="field" tabindex="-1"><a class="header-anchor" href="#field"><span>field</span></a></h2><p>type <code>String</code></p><p>Row object property that this column corresponds to. This can be:</p><ul><li>String <code>eg: &#39;name&#39;</code> - simple row property name</li><li>String <code>eg: &#39;location.lat&#39;</code>- nested row property name. lets say if the row had a property &#39;location&#39; which was an object containing &#39;lat&#39; and &#39;lon&#39;</li><li>Function - a function that returns a value to be displayed based on the row object</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fealdFn<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"><span class="token comment">// in methods</span></span>
<span class="line"><span class="token function">fieldFn</span><span class="token punctuation">(</span><span class="token parameter">rowObj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> rowObj<span class="token punctuation">.</span>name<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="type" tabindex="-1"><a class="header-anchor" href="#type"><span>type</span></a></h2><p>type <code>String</code></p><p>type of column. default: &#39;text&#39;. This determines the formatting for the column and filter behavior as well. Possible values:</p><ul><li><em>number</em> - right aligned</li><li><em>decimal</em> - right aligned, 2 decimal places</li><li><em>percentage</em> - expects a decimal like 0.03 and formats it as 3.00%</li><li><em>boolean</em> - right aligned</li><li><em>date</em> - expects a string representation of date eg &#39;20170530&#39;. You should also specify <a href="#dateinputformat">dateInputFormat</a> and <a href="#dateoutputformat">dateOutputFormat</a></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;joined On&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&#39;createdAt&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;date&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">dateInputFormat</span><span class="token operator">:</span> <span class="token string">&#39;yyyy-MM-dd&#39;</span><span class="token punctuation">,</span> <span class="token comment">// expects 2018-03-16</span></span>
<span class="line">    <span class="token literal-property property">dateOutputFormat</span><span class="token operator">:</span> <span class="token string">&#39;MMM do yyyy&#39;</span><span class="token punctuation">,</span> <span class="token comment">// outputs Mar 16th 2018</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dateinputformat" tabindex="-1"><a class="header-anchor" href="#dateinputformat"><span>dateInputFormat</span></a></h2><p>type <code>String</code></p><p>provide the format to parse date string.</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Vue-good-table uses date-fns for date parsing. <a href="https://date-fns.org/v2.17.0/docs/parse" target="_blank" rel="noopener noreferrer">Check out their formats here</a>.</p></div><h2 id="dateoutputformat" tabindex="-1"><a class="header-anchor" href="#dateoutputformat"><span>dateOutputFormat</span></a></h2><p>type <code>String</code></p><p>provide the format for output date</p><h2 id="sortable" tabindex="-1"><a class="header-anchor" href="#sortable"><span>sortable</span></a></h2><p>type <code>Boolean</code></p><p>enable/disable sorting on columns. This property is higher priority than global sortable property</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&#39;user_name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">sortable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="firstsorttype" tabindex="-1"><a class="header-anchor" href="#firstsorttype"><span>firstSortType</span></a></h2><p>type <code>String (default: &#39;asc&#39;)</code></p><p>controls the first sort type when sorting by the column. If you want the first sort type for this column to be descending, set this property to &#39;desc&#39;. Possible values:</p><ul><li><em>asc</em> - the initial sort will be ascending</li><li><em>desc</em> - the initial sort will be descending</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&#39;user_name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">sortable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">firstSortType</span><span class="token operator">:</span> <span class="token string">&#39;desc&#39;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="sortfn" tabindex="-1"><a class="header-anchor" href="#sortfn"><span>sortFn</span></a></h2><p>type <code>Function</code></p><p>custom sort function. If you want to supply your own sort function you can use this property.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// in data</span></span>
<span class="line"><span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">sortable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">sortFn</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sortFn<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token comment">//...</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token comment">// in methods</span></span>
<span class="line"><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">sortFn</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> col<span class="token punctuation">,</span> rowX<span class="token punctuation">,</span> rowY</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// x - row1 value for column</span></span>
<span class="line">    <span class="token comment">// y - row2 value for column</span></span>
<span class="line">    <span class="token comment">// col - column being sorted</span></span>
<span class="line">    <span class="token comment">// rowX - row object for row1</span></span>
<span class="line">    <span class="token comment">// rowY - row object for row2</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;</span> y <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> y <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="formatfn" tabindex="-1"><a class="header-anchor" href="#formatfn"><span>formatFn</span></a></h2><p>type <code>Function</code></p><p>Allows for custom format of values, <code>function(value)</code>, should return the formatted value to display.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// in data</span></span>
<span class="line"><span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Salary&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&#39;salary&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">sortable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">formatFn</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>formatFn<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token comment">//...</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token comment">// in methods</span></span>
<span class="line"><span class="token function-variable function">formatFn</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token string">&#39;$&#39;</span> <span class="token operator">+</span> value<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="html" tabindex="-1"><a class="header-anchor" href="#html"><span>html</span></a></h2><p>type <code>Boolean</code></p><p>indicates whether this column will require html rendering.</p>`,43)),n("div",u,[s[2]||(s[2]=n("p",{class:"hint-container-title"},"Tips",-1)),n("p",null,[s[1]||(s[1]=e("The preferred way of creating columns that have html is by ")),c(p,{to:"/guide/advanced/#custom-row-template"},{default:r(()=>s[0]||(s[0]=[e("using slots")])),_:1})])]),s[4]||(s[4]=a(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// in data</span></span>
<span class="line"><span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Action&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&#39;btn&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token comment">//...</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token literal-property property">rows</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">btn</span><span class="token operator">:</span> <span class="token string">&#39;&lt;button&gt;My Action&lt;/button&gt;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="width" tabindex="-1"><a class="header-anchor" href="#width"><span>width</span></a></h2><p>type <code>Number</code></p><p>provide a width value for this column</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&#39;user_name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#39;50px&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hidden" tabindex="-1"><a class="header-anchor" href="#hidden"><span>hidden</span></a></h2><p>type <code>Boolean</code></p><p>hide a column</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&#39;user_name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="thclass" tabindex="-1"><a class="header-anchor" href="#thclass"><span>thClass</span></a></h2><p>type <code>String</code></p><p>provide custom class(es) to the table header</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&#39;user_name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">thClass</span><span class="token operator">:</span> <span class="token string">&#39;custom-th-class&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tdclass" tabindex="-1"><a class="header-anchor" href="#tdclass"><span>tdClass</span></a></h2><p>type <code>String</code> or <code>Function</code></p><p>provide custom class(es) to the table cells</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&#39;user_name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">tdClass</span><span class="token operator">:</span> <span class="token string">&#39;text-center&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>or</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&#39;user_name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">tdClass</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tdClassFunc<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"><span class="token comment">// and later</span></span>
<span class="line"><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">tdClassFunc</span><span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>row<span class="token punctuation">.</span>field <span class="token operator">&gt;</span> <span class="token number">50</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token string">&#39;red-class&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token string">&#39;green-class&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="globalsearchdisabled" tabindex="-1"><a class="header-anchor" href="#globalsearchdisabled"><span>globalSearchDisabled</span></a></h2><p>type <code>Boolean (default: false)</code></p><p>if true, this column will be ignored by the global search</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&#39;user_name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">globalSearchDisabled</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tooltip" tabindex="-1"><a class="header-anchor" href="#tooltip"><span>tooltip</span></a></h2><p>type <code>String</code></p><p>Text to put on a simple tooltip for column header.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&#39;user_name&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">tooltip</span><span class="token operator">:</span> <span class="token string">&#39;A simple tooltip&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27))])}const b=t(d,[["render",m],["__file","column-options.html.vue"]]),h=JSON.parse('{"path":"/guide/configuration/column-options.html","title":"Column Options","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"label","slug":"label","link":"#label","children":[]},{"level":2,"title":"field","slug":"field","link":"#field","children":[]},{"level":2,"title":"type","slug":"type","link":"#type","children":[]},{"level":2,"title":"dateInputFormat","slug":"dateinputformat","link":"#dateinputformat","children":[]},{"level":2,"title":"dateOutputFormat","slug":"dateoutputformat","link":"#dateoutputformat","children":[]},{"level":2,"title":"sortable","slug":"sortable","link":"#sortable","children":[]},{"level":2,"title":"firstSortType","slug":"firstsorttype","link":"#firstsorttype","children":[]},{"level":2,"title":"sortFn","slug":"sortfn","link":"#sortfn","children":[]},{"level":2,"title":"formatFn","slug":"formatfn","link":"#formatfn","children":[]},{"level":2,"title":"html","slug":"html","link":"#html","children":[]},{"level":2,"title":"width","slug":"width","link":"#width","children":[]},{"level":2,"title":"hidden","slug":"hidden","link":"#hidden","children":[]},{"level":2,"title":"thClass","slug":"thclass","link":"#thclass","children":[]},{"level":2,"title":"tdClass","slug":"tdclass","link":"#tdclass","children":[]},{"level":2,"title":"globalSearchDisabled","slug":"globalsearchdisabled","link":"#globalsearchdisabled","children":[]},{"level":2,"title":"tooltip","slug":"tooltip","link":"#tooltip","children":[]}],"git":{"updatedTime":1615489652000,"contributors":[{"name":"Akshay Anand","email":"aks9800@gmail.com","commits":6},{"name":"Salvador Montiel","email":"salvadormontiel8@gmail.com","commits":1},{"name":"s-slavchev","email":"s-slavchev@users.noreply.github.com","commits":1}]},"filePathRelative":"guide/configuration/column-options.md"}');export{b as comp,h as data};
