import{_ as o,r as e,o as u,c as r,a as s,b as a,w as d,e as p,d as t}from"./app-CbJnpAZk.js";const m={};function v(k,n){const i=e("RouteLink"),l=e("search-demo"),c=e("external-query");return u(),r("div",null,[n[3]||(n[3]=s("h1",{id:"search-options",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#search-options"},[s("span",null,"Search Options")])],-1)),n[4]||(n[4]=s("p",null,"Vue-good-table supports two ways of filtering the table.",-1)),s("ol",null,[n[2]||(n[2]=s("li",null,"A global search that searches through all records in the table",-1)),s("li",null,[a(i,{to:"/guide/configuration/column-filter-options.html"},{default:d(()=>n[0]||(n[0]=[p("Column filters")])),_:1}),n[1]||(n[1]=p(" that filter based on a given column"))])]),n[5]||(n[5]=t(`<p>This section talks about how to configure global search options.</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-good-table</span></span>
<span class="line">  <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rows<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:search-options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{</span>
<span class="line">    enabled: true,</span>
<span class="line">    trigger: &#39;enter&#39;,</span>
<span class="line">    skipDiacritics: true,</span>
<span class="line">    searchFn: mySearchFn,</span>
<span class="line">    placeholder: &#39;Search this table&#39;,</span>
<span class="line">    externalQuery: searchQuery,</span>
<span class="line">    v-on:search=<span class="token punctuation">&quot;</span></span><span class="token attr-name">onSearch&quot;</span></span>
<span class="line">  <span class="token attr-name">}&quot;</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-good-table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="enabled" tabindex="-1"><a class="header-anchor" href="#enabled"><span>enabled</span></a></h2><p>type: <code>Boolean (default: false)</code></p><p>Allows a single search input for the whole table</p><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>Enabling this option disables column filters</p></div><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-good-table</span></span>
<span class="line">  <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rows<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:search-options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{</span>
<span class="line">    enabled: true</span>
<span class="line">  }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-good-table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7)),a(l),n[6]||(n[6]=t(`<h2 id="trigger" tabindex="-1"><a class="header-anchor" href="#trigger"><span>trigger</span></a></h2><p>type: <code>String (default: &#39;&#39;)</code></p><p>Allows you to specify if you want search to trigger on &#39;enter&#39; event of the input. By <strong>default table searches on key-up</strong>.</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-good-table</span></span>
<span class="line">  <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rows<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:search-options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{</span>
<span class="line">    enabled: true,</span>
<span class="line">    trigger: &#39;enter&#39;</span>
<span class="line">  }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-good-table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4)),a(l,{trigger:"enter"}),n[7]||(n[7]=t(`<h2 id="skipdiacritics" tabindex="-1"><a class="header-anchor" href="#skipdiacritics"><span>skipDiacritics</span></a></h2><p>type: <code>boolean (default: false)</code></p><p>By default, search does a diacriticless comparison so you can search through accented characters. This however slows down the search to some extent. If your data doesn&#39;t have accented characters, you can skip this check and gain some performance.</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-good-table</span></span>
<span class="line">  <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rows<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:search-options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{</span>
<span class="line">    enabled: true,</span>
<span class="line">    skipDiacritics: true,</span>
<span class="line">  }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-good-table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="searchfn" tabindex="-1"><a class="header-anchor" href="#searchfn"><span>searchFn</span></a></h2><p>type: <code>Function</code></p><p>Allows you to specify your own search function for the global search</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-good-table</span></span>
<span class="line">  <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rows<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:search-options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{</span>
<span class="line">    enabled: true,</span>
<span class="line">    searchFn: myFunc</span>
<span class="line">  }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-good-table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// in js</span></span>
<span class="line"><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">myFunc</span><span class="token punctuation">(</span><span class="token parameter">row<span class="token punctuation">,</span> col<span class="token punctuation">,</span> cellValue<span class="token punctuation">,</span> searchTerm</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> cellValue <span class="token operator">===</span> <span class="token string">&#39;my value&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="placeholder" tabindex="-1"><a class="header-anchor" href="#placeholder"><span>placeholder</span></a></h2><p>type: <code>String (default: &#39;Search Table&#39;)</code></p><p>Text for global search input place holder</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-good-table</span></span>
<span class="line">  <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rows<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:search-options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{</span>
<span class="line">    enabled: true,</span>
<span class="line">    placeholder: &#39;Search this table&#39;,</span>
<span class="line">  }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-good-table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="externalquery" tabindex="-1"><a class="header-anchor" href="#externalquery"><span>externalQuery</span></a></h2><p>type: <code>String</code></p><p>If you want to use your own input for searching the table, you can use this property</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>searchTerm<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-good-table</span></span>
<span class="line">  <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rows<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name">:search-options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{</span>
<span class="line">    enabled: true,</span>
<span class="line">    externalQuery: searchTerm</span>
<span class="line">  }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-good-table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// and in data</span></span>
<span class="line"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">searchTerm</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// rows, columns etc...</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18)),a(c)])}const b=o(m,[["render",v],["__file","search-options.html.vue"]]),g=JSON.parse('{"path":"/guide/configuration/search-options.html","title":"Search Options","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"enabled","slug":"enabled","link":"#enabled","children":[]},{"level":2,"title":"trigger","slug":"trigger","link":"#trigger","children":[]},{"level":2,"title":"skipDiacritics","slug":"skipdiacritics","link":"#skipdiacritics","children":[]},{"level":2,"title":"searchFn","slug":"searchfn","link":"#searchfn","children":[]},{"level":2,"title":"placeholder","slug":"placeholder","link":"#placeholder","children":[]},{"level":2,"title":"externalQuery","slug":"externalquery","link":"#externalquery","children":[]}],"git":{"updatedTime":1706212073000,"contributors":[{"name":"Akshay Anand","email":"aks9800@gmail.com","commits":3},{"name":"Boris Flesch","email":"boris.flesch@gmail.com","commits":1},{"name":"Marsad1998","email":"36798110+Marsad1998@users.noreply.github.com","commits":1},{"name":"Vincent Tang","email":"10290348+vincentntang@users.noreply.github.com","commits":1}]},"filePathRelative":"guide/configuration/search-options.md"}');export{b as comp,g as data};
